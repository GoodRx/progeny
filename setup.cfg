###############################################################################
# flake8 configuration
###############################################################################

[flake8]
max-line-length = 85
select =
    E,
    F,
    W,
    # https://github.com/PyCQA/flake8-bugbear
    B,
    # Opinionated warnings with the exception of line-length
    B90,
    # http://www.pydocstyle.org/en/latest/error_codes.html
    # Docstring whitespace issues
    D2,
    # Multi-line docstring summary should start at the second line, i.e. not
    # the same line as the triple quotes
    D213,
    # Docstring quotes issues
    D3,
    # First word of the docstring should not be "This"
    D404
ignore =
    # Our preferred style is line breaks before binary operators
    # ref: https://github.com/PyCQA/pycodestyle/issues/498
    W503,
    # flake8-bugbear's B902 attempts to ensure we use `self` for instance
    # methods and `cls` for class methods, but this has false positives.
    B902,
    # flake8-bugbear's B903 advises using `collections.namedtuple` for
    # data-only classes. Unfortunately, it doesn't take into account
    # subclassing where the parent class may have methods.
    # Also, use attrs.
    B903,
    # Our docstring style allows for a multi-line summary, e.g.:
    #
    # """
    # Prevent database use without the appropriate fixture/marker, used
    # automatically.
    #
    # Additional content goes here.
    # """
    D205,
    # Inverse of D213
    D212


###############################################################################
# coverage.py configuration
###############################################################################

[coverage:run]
source =
    progeny
    tests
branch = True
parallel = True

# Mark paths as equivalent
[coverage:paths]
source =
    progeny
   .tox/*/lib/python*/site-packages/progeny
   .tox/pypy*/site-packages/progeny

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:

    # Don't complain about uncovered code in tests that were supposed to fail
    @pytest.mark.xfail

# Always show line numbers of uncovered statements
show_missing = True
